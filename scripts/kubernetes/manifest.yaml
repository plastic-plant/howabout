# ###############################################################################
#
# kubectl apply -f manifest.yaml
# kubectl delete deployment howabout
# kubeclt delete ingress howabout-ingress
# kubectl delete service howabout-service
# kubectl delete configmap howabout-configmap
#
# ###############################################################################

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: howabout-ingress
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: howabout-service
            port:
              number: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: howabout-service
spec:
  selector:
    app: howabout
  type: NodePort
  ports:
    - protocol: TCP
      port: 5000
      nodePort:
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: howabout
spec:
  replicas: 1
  selector:
    matchLabels:
      app: howabout
  template:
    metadata:
      labels:
        app: howabout
    spec:
      containers:
      - name: howabout
        image: howabout/howabout:latest
        imagePullPolicy: IfNotPresent
        command: ["dotnet", "howabout.dll", "start"]
        ports:
        - containerPort: 5000
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: howabout-appsettings
          mountPath: /app/appsettings.json
          subPath: appsettings.json
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /api/healthy
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
      volumes:
      - name: howabout-appsettings
        configMap:
          name: howabout-configmap
          items:
          - key: appsettings.json
            path: appsettings.json
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: howabout-configmap
data:
  appsettings.json: |
    {
      "Urls": "http://+:5000",
      "AllowedHosts": "*",

      "Providers": {
        "Embeddings": {
          "Provider": "OpenAI",
          "Endpoint": "http://host.docker.internal:1234/v1/",
          "EmbeddingModel": "lm-studio",
          "EmbeddingModelMaxTokenTotal": 2048,
          "APIKey": "lm-studio",
        },
        "Completions": {
          "Provider": "OpenAI",
          "Endpoint": "http://host.docker.internal:1234/v1/",
          "TextModel": "lm-studio",
          "TextModelMaxTokenTotal": 8192,
          "APIKey": "lm-studio",
        }
      },

      "Logging": {
        "LogLevel": {
          "Default": "Debug",
        },
        "Console": {
          "FormatterName": "Console",
          "FormatterOptions": {
            "SingleLine": true,
            "OutputTemplate": "{Timestamp:HH:mm} {Message:lj}{NewLine}{Exception}"
          }
        }
      },
      "Serilog": {
        "MinimumLevel": {
          "Default": "Debug",
        },
        "WriteTo": [
          {
            "Name": "Console",
            "Args": {
              "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
              "outputTemplate": "{Timestamp:HH:mm} {Message:lj}{NewLine}{Exception}"
            }
          }
        ]
      }
    }
---
